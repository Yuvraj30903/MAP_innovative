# Set server port if needed
server.port=8080
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.application.name=api-gateway

# Eureka server URL
eureka.client.service-url.defaultZone=http://discovery-server:8761/eureka/
spring.cloud.gateway.discovery.locator.enabled=true
# Enable Eureka client behavior 
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
logging.level.org.springframework.cloud.gateway=DEBUG 
logging.level.org.springframework.web=DEBUG
# spring.webflux.cors.allowed-origins=*
# spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.webflux.cors.allowed-headers=*

# dynamic routes(service1)
spring.cloud.gateway.routes[0].id=book-service-route
spring.cloud.gateway.routes[0].uri=lb://book-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/book/**
# dynamic routes(service1)
spring.cloud.gateway.routes[1].id=book-recommandation-service-route
spring.cloud.gateway.routes[1].uri=http://book-recommandation-service:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/recommand/**
# dynamic routes(service2)
spring.cloud.gateway.routes[2].id=book-inventory-service-route
spring.cloud.gateway.routes[2].uri=http://book-inventory-service:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/inventory/**



